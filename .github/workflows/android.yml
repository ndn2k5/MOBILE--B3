name: Android CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Gradle (with caching)
        uses: gradle/actions/setup-gradle@v4

      # ---- SDK install + license fix ----
      - name: Install Android SDK components
        uses: android-actions/setup-android@v3
        with:
          # Keep this minimal; add more if your project needs them
          packages: |
            cmdline-tools;latest
            platform-tools
            platforms;android-34
            build-tools;34.0.0

      - name: Accept Android SDK licenses (bulletproof)
        shell: bash
        run: |
          set -e
          SDK="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          mkdir -p "$SDK/licenses"

          # 1) Pre-seed the common license hashes (covers most CI failures)
          cat > "$SDK/licenses/android-sdk-license" <<'EOF'
  8933bad161af4178b1185d1a37fbf41ea5269c55
  d56f5187479451eabf01fb78af6dfcb131a6481e
  24333f8a63b6825ea9c5514f83c2829b004d1fee
  EOF
  
  cat > "$SDK/licenses/android-sdk-preview-license" <<'EOF'
  84831b9409646a918e30573bab4c9c91346d8abd
  EOF
  
  cat > "$SDK/licenses/google-gdk-license" <<'EOF'
  33b6a2b5866f1c4ddc2f0438bfa8f0b34b4dfe6a
  EOF

  # Some runners complain about extras; add an empty file if missing
  : > "$SDK/licenses/android-googletv-license" || true

  # 2) Put sdkmanager on PATH
  export PATH="$SDK/cmdline-tools/latest/bin:$PATH"
  
  # 3) Run license acceptance quietly (twice, for stubborn runners)
  yes | sdkmanager --licenses > /dev/null || true
  yes | sdkmanager --licenses > /dev/null || true
  # ---- end license fix ----

  - name: Make gradlew executable
    run: chmod +x gradlew

  - name: Unit tests
    run: ./gradlew testDebugUnitTest --stacktrace

  - name: Lint
    run: ./gradlew lint --stacktrace

  - name: Build debug APK
    run: ./gradlew assembleDebug --stacktrace

  - name: Upload debug APK
    uses: actions/upload-artifact@v4
    with:
      name: app-debug-apk
      path: app/build/outputs/apk/debug/*.apk
      if-no-files-found: error

  - name: Upload test results
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: test-results
      path: |
        **/build/test-results/**
        **/build/reports/tests/**
      if-no-files-found: ignore

  - name: Upload lint report
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: lint-report
      path: |
        **/build/reports/lint-results*.html
        **/build/reports/lint-results*.xml
      if-no-files-found: ignore
